@using DocumentTrackingSystem.Models
@model DocumentTrackingSystem.Models.tbl_Document
@{

}
<div class="col-md-12">
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
</div>
<div class="col-md-12">
    <div class="row mb-3">
        @Html.LabelFor(model => model.Upload, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
            @Html.HiddenFor(model => model.Path)
            @Html.HiddenFor(model => model.Filename)
            @Html.TextBoxFor(model => model.Upload, new { @class = "form-control form-control-sm", type = "file" })
            @Html.ValidationMessageFor(model => model.Upload, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3 ui-widget">
        @Html.LabelFor(model => model.ReceivedFrom, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.ReceivedFrom, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.ReceivedFrom, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Office, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
            @Html.DropDownListFor(model => model.Office, new tbl_Office().ListOffice(), "Select Office", new { @class = "form-select form-select-sm" })
            @Html.ValidationMessageFor(model => model.Office, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Category, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
           @Html.DropDownListFor(model => model.Category, new tbl_Categories().ListCategory(), "Select Document Type", new { @class = "form-select form-select-sm" })
            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Description, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="row mb-3">
        @Html.LabelFor(model => model.Date, new { @class = "col-sm-2 col-form-label col-form-label-sm" })
        <div class="col-sm-10">
            @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control form-control-sm" } })
            @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
        </div>
    </div>
</div>



<script>
    $("#ReceivedFrom").autocomplete({
        source: function (request, response) {
            $.ajax({
                url: `@Url.Action("ReceivedFrom")`,
                dataType: "json",
                data: {
                    Term: request.term
                },
                success: function (data) {
                    response(data);
                }
            });
        },
        minLength: 2
    });
</script>